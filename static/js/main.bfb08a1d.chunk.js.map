{"version":3,"sources":["CurrencyRow.js","App.js","index.js"],"names":["CurrencyRow","props","currencyOptions","selectedCurrency","onChangeCurrency","amount","onChangeAmount","type","className","value","onChange","map","option","BASE_URL","App","toAmount","fromAmount","useState","setCurrencyOptions","fromCurrency","setFromCurrency","toCurrency","setToCurrency","exchangeRate","setExchangeRate","setAmount","amountInFromCurrency","setAmountInFromCurrency","useEffect","fetch","then","res","json","data","firstCurrency","Object","keys","rates","base","e","target","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wOAEe,SAASA,EAAYC,GACnC,IACCC,EAKGD,EALHC,gBACAC,EAIGF,EAJHE,iBACAC,EAGGH,EAHHG,iBACAC,EAEGJ,EAFHI,OACAC,EACGL,EADHK,eAGD,OACC,gCACC,uBACCC,KAAK,SACLC,UAAU,QACVC,MAAOJ,EACPK,SAAUJ,IAEX,wBAAQG,MAAON,EAAkBO,SAAUN,EAA3C,SACEF,EAAgBS,KAAI,SAACC,GAAD,OACpB,wBAAqBH,MAAOG,EAA5B,SACEA,GADWA,WCjBlB,IACMC,EACL,uFAuEcC,MArEf,WACC,IAOIC,EAAUC,EAPd,EAA8CC,mBAAS,IAAvD,mBAAOf,EAAP,KAAwBgB,EAAxB,KACA,EAAwCD,qBAAxC,mBAAOE,EAAP,KAAqBC,EAArB,KACA,EAAoCH,qBAApC,mBAAOI,EAAP,KAAmBC,EAAnB,KACA,EAAwCL,qBAAxC,mBAAOM,EAAP,KAAqBC,EAArB,KACA,EAA4BP,mBAAS,GAArC,mBAAOZ,EAAP,KAAeoB,EAAf,KACA,EAAwDR,oBAAS,GAAjE,mBAAOS,EAAP,KAA6BC,EAA7B,KAyCA,OAtCID,GACHV,EAAaX,EACbU,EAAWV,EAASkB,IAEpBR,EAAWV,EACXW,EAAaX,EAASkB,GAGvBK,qBAAU,WACTC,MAAMhB,GACJiB,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACN,IAAMC,EAAgBC,OAAOC,KAAKH,EAAKI,OAAO,GAC9CnB,EAAmB,CAACe,EAAKK,MAAP,mBAAgBH,OAAOC,KAAKH,EAAKI,UACnDjB,EAAgBa,EAAKK,MACrBhB,EAAcY,GACdV,EAAgBS,EAAKI,MAAMH,SAE3B,IAEHN,qBAAU,WACW,MAAhBT,GAAsC,MAAdE,GAC3BQ,MAAM,GAAD,OAAIhB,EAAJ,iBAAqBM,EAArB,oBAA6CE,IAEhDS,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GAAD,OAAUT,EAAgBS,EAAKI,MAAMhB,SAE3C,CAACF,EAAcE,IAYjB,qCACC,yCACA,cAACrB,EAAD,CACCE,gBAAiBA,EACjBC,iBAAkBgB,EAClBf,iBAAkB,SAACmC,GAAD,OAAOnB,EAAgBmB,EAAEC,OAAO/B,QAClDJ,OAAQW,EACRV,eAjBH,SAAgCiC,GAC/Bd,EAAUc,EAAEC,OAAO/B,OACnBkB,GAAwB,MAiBvB,qBAAKnB,UAAU,SAAf,eACA,cAACR,EAAD,CACCE,gBAAiBA,EACjBC,iBAAkBkB,EAClBjB,iBAAkB,SAACmC,GAAD,OAAOjB,EAAciB,EAAEC,OAAO/B,QAChDJ,OAAQU,EACRT,eArBH,SAA8BiC,GAC7Bd,EAAUc,EAAEC,OAAO/B,OACnBkB,GAAwB,UChD1Bc,IAASC,OACR,cAAC,IAAMC,WAAP,UACC,cAAC,EAAD,MAEDC,SAASC,eAAe,W","file":"static/js/main.bfb08a1d.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default function CurrencyRow(props) {\r\n\tconst {\r\n\t\tcurrencyOptions,\r\n\t\tselectedCurrency,\r\n\t\tonChangeCurrency,\r\n\t\tamount,\r\n\t\tonChangeAmount,\r\n\t} = props;\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<input\r\n\t\t\t\ttype=\"number\"\r\n\t\t\t\tclassName=\"input\"\r\n\t\t\t\tvalue={amount}\r\n\t\t\t\tonChange={onChangeAmount}\r\n\t\t\t/>\r\n\t\t\t<select value={selectedCurrency} onChange={onChangeCurrency}>\r\n\t\t\t\t{currencyOptions.map((option) => (\r\n\t\t\t\t\t<option key={option} value={option}>\r\n\t\t\t\t\t\t{option}\r\n\t\t\t\t\t</option>\r\n\t\t\t\t))}\r\n\t\t\t</select>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport CurrencyRow from \"./CurrencyRow\";\n\nconst API_KEY = \"f803fe4db076dec7f0499aea48b3f8e7\";\nconst BASE_URL =\n\t\"http://api.exchangeratesapi.io/v1/latest?access_key=\" + API_KEY;\n\nfunction App() {\n\tconst [currencyOptions, setCurrencyOptions] = useState([]);\n\tconst [fromCurrency, setFromCurrency] = useState();\n\tconst [toCurrency, setToCurrency] = useState();\n\tconst [exchangeRate, setExchangeRate] = useState();\n\tconst [amount, setAmount] = useState(1);\n\tconst [amountInFromCurrency, setAmountInFromCurrency] = useState(true);\n\n\tlet toAmount, fromAmount;\n\tif (amountInFromCurrency) {\n\t\tfromAmount = amount;\n\t\ttoAmount = amount * exchangeRate;\n\t} else {\n\t\ttoAmount = amount;\n\t\tfromAmount = amount / exchangeRate;\n\t}\n\n\tuseEffect(() => {\n\t\tfetch(BASE_URL)\n\t\t\t.then((res) => res.json())\n\t\t\t.then((data) => {\n\t\t\t\tconst firstCurrency = Object.keys(data.rates)[0];\n\t\t\t\tsetCurrencyOptions([data.base, ...Object.keys(data.rates)]);\n\t\t\t\tsetFromCurrency(data.base);\n\t\t\t\tsetToCurrency(firstCurrency);\n\t\t\t\tsetExchangeRate(data.rates[firstCurrency]);\n\t\t\t});\n\t}, []);\n\n\tuseEffect(() => {\n\t\tif (fromCurrency != null && toCurrency != null) {\n\t\t\tfetch(`${BASE_URL}&base=${fromCurrency}&symbols=${toCurrency}`)\n\t\t\t\t// fetch only works when fromCurrency = EUR bcos base_currency_access_restricted\n\t\t\t\t.then((res) => res.json())\n\t\t\t\t.then((data) => setExchangeRate(data.rates[toCurrency]));\n\t\t}\n\t}, [fromCurrency, toCurrency]);\n\n\tfunction handleFromAmountChange(e) {\n\t\tsetAmount(e.target.value);\n\t\tsetAmountInFromCurrency(true);\n\t}\n\tfunction handleToAmountChange(e) {\n\t\tsetAmount(e.target.value);\n\t\tsetAmountInFromCurrency(false);\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<h1>Convert</h1>\n\t\t\t<CurrencyRow\n\t\t\t\tcurrencyOptions={currencyOptions}\n\t\t\t\tselectedCurrency={fromCurrency}\n\t\t\t\tonChangeCurrency={(e) => setFromCurrency(e.target.value)}\n\t\t\t\tamount={fromAmount}\n\t\t\t\tonChangeAmount={handleFromAmountChange}\n\t\t\t/>\n\t\t\t<div className=\"equals\">=</div>\n\t\t\t<CurrencyRow\n\t\t\t\tcurrencyOptions={currencyOptions}\n\t\t\t\tselectedCurrency={toCurrency}\n\t\t\t\tonChangeCurrency={(e) => setToCurrency(e.target.value)}\n\t\t\t\tamount={toAmount}\n\t\t\t\tonChangeAmount={handleToAmountChange}\n\t\t\t/>\n\t\t</>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}